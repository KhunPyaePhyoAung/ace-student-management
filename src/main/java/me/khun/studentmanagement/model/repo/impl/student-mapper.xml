<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="student">
	
	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyColumn="id_code" keyProperty="student.idCode">
		INSERT INTO `student` (`id_prefix`, `name`, `date_of_birth`, `gender`, `phone`, `education`)
		VALUES (#{studentIdPrefix}, #{student.name}, #{student.dateOfBirth}, #{student.gender}, #{student.phone}, #{student.education});
	</insert>
	
	<insert id="insertCourse" parameterType="map">
		INSERT IGNORE INTO `student_course` (`student_id`, `course_id`) VALUES
		<foreach item="course" collection="courses" separator=",">
			(#{studentIdCode}, #{course.idCode})
		</foreach>
	</insert>
	
	<update id="updateById" parameterType="student">
		UPDATE `student` SET `name` = #{name}, `date_of_birth` = #{dateOfBirth}, `gender` = #{gender}, `phone` = #{phone}, `education` = #{education}
		WHERE CONCAT(`id_prefix`, `id_code`) = #{id};
	</update>
	
	<select id="selectById" parameterType="string" resultMap="studentWithCoursesResult">
		SELECT `s`.`id_prefix` AS `student_id_prefix`, `s`.`id_code` AS `student_id_code`, CONCAT(`s`.`id_prefix`, `s`.`id_code`) AS `student_id`,
		`s`.`name` AS `student_name`, `s`.`date_of_birth` AS `student_date_of_birth`, `s`.`gender` AS `student_gender`,
		`s`.`phone` AS `student_phone`, `s`.`education` AS `student_education`, `c`.`id_prefix` AS `course_id_prefix`, `c`.`id_code` AS `course_id_code`,
		CONCAT(`c`.`id_prefix`, `c`.`id_code`) AS `course_id`, `c`.`name` AS `course_name`, `c`.`short_name` AS `course_short_name`
		FROM `student` `s` LEFT JOIN `student_course` `sc` ON `s`.`id_code` = `sc`.`student_id`
		LEFT JOIN `course` `c` ON `c`.`id_code` = `sc`.`course_id`
		WHERE CONCAT(`s`.`id_prefix`, `s`.`id_code`) = #{id};
	</select>
	
	<select id="selectAll" resultMap="studentWithCoursesResult">
		SELECT `s`.`id_prefix` AS `student_id_prefix`, `s`.`id_code` AS `student_id_code`, CONCAT(`s`.`id_prefix`, `s`.`id_code`) AS `student_id`,
		`s`.`name` AS `student_name`, `s`.`date_of_birth` AS `student_date_of_birth`, `s`.`gender` AS `student_gender`,
		`s`.`phone` AS `student_phone`, `s`.`education` AS `student_education`, `c`.`id_prefix` AS `course_id_prefix`, `c`.`id_code` AS `course_id_code`,
		CONCAT(`c`.`id_prefix`, `c`.`id_code`) AS `course_id`, `c`.`name` AS `course_name`, `c`.`short_name` AS `course_short_name`
		FROM `student` `s` LEFT JOIN `student_course` `sc` ON `s`.`id_code` = `sc`.`student_id`
		LEFT JOIN `course` `c` ON `c`.`id_code` = `sc`.`course_id`;
	</select>
	
	<select id="selectCount" resultType="long">
		SELECT COUNT(`id_code`) FROM `student`;
	</select>
	
	<select id="selectByStudentKeywordAndCourseKeyword" parameterType="map" resultMap="studentWithCoursesResult">
		SELECT `s`.`id_prefix` AS `student_id_prefix`, `s`.`id_code` AS `student_id_code`, CONCAT(`s`.`id_prefix`, `s`.`id_code`) AS `student_id`,
		`s`.`name` AS `student_name`, `s`.`date_of_birth` AS `student_date_of_birth`, `s`.`gender` AS `student_gender`,
		`s`.`phone` AS `student_phone`, `s`.`education` AS `student_education`, `c`.`id_prefix` AS `course_id_prefix`, `c`.`id_code` AS `course_id_code`,
		CONCAT(`c`.`id_prefix`, `c`.`id_code`) AS `course_id`, `c`.`name` AS `course_name`, `c`.`short_name` AS `course_short_name`
		FROM `student` `s` LEFT JOIN `student_course` `sc` ON `s`.`id_code` = `sc`.`student_id`
		LEFT JOIN `course` `c` ON `c`.`id_code` = `sc`.`course_id`
		WHERE (CONCAT(`s`.`id_prefix`, `s`.`id_code`) LIKE #{studentKeyword}
		OR `s`.`name` LIKE #{studentKeyword} OR `s`.`phone` LIKE #{studentKeyword} OR `s`.`education` LIKE #{studentKeyword})
		AND (CONCAT(`c`.`id_prefix`, `c`.`id_code`) LIKE #{courseKeyword} OR `c`.`name` LIKE #{courseKeyword} OR `c`.`short_name` LIKE #{courseKeyword});
	</select>
	
	<delete id="deleteById" parameterType="string">
		DELETE FROM `student` WHERE CONCAT(`id_prefix`, `id_code`) = #{id}
	</delete>
	
	<delete id="deleteByCourseIdNotIn" parameterType="map">
		DELETE FROM `student_course` WHERE `course_id` NOT IN
		<foreach item="course" collection="courses" open="(" close=")" separator=",">
			#{course.idCode}
		</foreach>
		AND `student_id` = #{studentIdCode};
	</delete>
	
	<resultMap id="studentWithCoursesResult" type="student">
		<id property="idCode" column="student_id_code"/>
		<result property="idPrefix" column="student_id_prefix"/>
		<result property="id" column="student_id"/>
		<result property="name" column="student_name"/>
		<result property="dateOfBirth" column="student_date_of_birth"/>
		<result property="gender" column="student_gender"/>
		<result property="phone" column="student_phone"/>
		<result property="education" column="student_education"/>
		
		<collection property="courses" column="course_id_code" resultMap="courseResult">
		
		</collection>
	</resultMap>
	
	<resultMap id="courseResult" type="course">
		<id property="idCode" column="course_id_code"/>
		<result property="idPrefix" column="course_id_prefix"/>
		<result property="id" column="course_id"/>
		<result property="name" column="course_name"/>
		<result property="shortName" column="course_short_name"/>
	</resultMap>
</mapper>